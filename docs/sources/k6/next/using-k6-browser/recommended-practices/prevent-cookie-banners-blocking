---
title: "How To Prevent Cookie Banners From Blocking Interactions"
heading: "Prevent Cookie Banners from Blocking Element Interactions in k6 Browser Tests"
head_title: "Handle Cookie Banners in k6 Browser"
description: "How to reveal and dismiss cookie banners in k6 Browser tests to prevent blocked interactions and improve test reliability."
weight: 01
---

---
title: "How To Prevent Cookie Banners From Blocking Interactions"
heading: "Prevent Cookie Banners from Blocking Element Interactions in k6 Browser Tests"
head_title: "Handle Cookie Banners in k6 Browser"
description: "Learn how to reveal and dismiss cookie banners in k6 Browser tests to prevent blocked interactions."
weight: 01
---

# Overview
Cookie banners often appear shortly after a page loads or remain hidden until a user interacts with the site by scrolling or clicking. In k6 Browser tests, we recommend proactively revealing and dismissing these banners before proceeding further actions. Leaving a banner open can block page elements and cause interaction failures (for example, when a button isn’t clickable because it’s covered by the banner). If you find yourself using *force click*, it may indicate that an element is hidden or overlapped by a cookie banner.

To resolve this issue:

**Trigger and dismiss the cookie banner:**  
Simulate an initial user action immediately after navigation to reveal banners that only appear after interaction. Once visible, dismiss the cookie banner before continuing with the rest of the test.

# Example 
<!-- md-k6:skip -->
```javascript
import { browser } from 'k6/browser';

export const options = {
  scenarios: {
    ui: {
      executor: 'shared-iterations',
      options: {
        browser: {
          type: 'chromium',
        },
      },
    },
  },
  thresholds: {
    checks: ['rate==1.0'],
  },
};

export default async function () {
  const page = await browser.newPage();

  try {
    await page.goto('https://test.k6.io/');
    await page.screenshot({ path: 'screenshots/screenshot.png' });
  } finally {
    await page.close();
  }
}
```


