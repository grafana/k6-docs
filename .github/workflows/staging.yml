name: Staging

on:
  push:
    branches:
      - main

env:
  ALGOLIA_ADMIN_KEY: ${{ secrets.STAGING_CI_ALGOLIA_ADMIN_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_CI_AWS_ACCESS_KEY }}
  AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.STAGING_CI_AWS_CLOUDFRONT_DISTRIBUTION_ID }}
  AWS_REGION: 'eu-west-1'
  AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_CI_AWS_SECRET_KEY }}
  BUCKET_NAME: ${{ secrets.STAGING_CI_BUCKET_NAME }}
  BUCKET_REGION: ${{ secrets.STAGING_CI_BUCKET_REGION }}
  GATSBY_ALGOLIA_APP_ID: ${{ secrets.STAGING_CI_GATSBY_ALGOLIA_APP_ID }}
  GATSBY_ALGOLIA_INDEX_NAME: ${{ secrets.STAGING_CI_GATSBY_ALGOLIA_INDEX_NAME }}
  GATSBY_ALGOLIA_SEARCH_ONLY_KEY: ${{ secrets.STAGING_CI_GATSBY_ALGOLIA_SEARCH_ONLY_KEY }}
  GATSBY_DEFAULT_APP_URL: https://app.${{ secrets.STAGING_CI_MAIN_URL }}
  GATSBY_DEFAULT_BLOG_URL: https://${{ secrets.STAGING_CI_MAIN_URL }}/blog
  GATSBY_DEFAULT_DOC_URL: https://${{ secrets.STAGING_CI_MAIN_URL }}/docs
  GATSBY_DEFAULT_MAIN_URL: https://${{ secrets.STAGING_CI_MAIN_URL }}
  GATSBY_GOOGLE_API_KEY: ${{ secrets.STAGING_CI_GATSBY_GOOGLE_API_KEY }}
jobs:
  update-dependencies:
    name: Update node module dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Use Node.js 16.xs
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs:
      - update-dependencies
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Use Node.js 16.xs
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Check formatting
        run: |
          npm run format
      - name: Lint code
        run: |
          npm run lint
      - name: Lint code examples
        run: |
          npm run lint:examples
  lint-prose:
    name: Lint prose
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: ./src/data/markdown
          version: 2.17.0
          fail_on_error: true
          vale_flags: '--glob=**/{docs,translated-guides/en}/**/*.md'
  build-deploy-staging:
    name: Build and deploy to staging
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Use Node.js 16.xs
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build:gatsby
      - name: Install AWS CLI dependencies
        run: sudo apt-get update && sudo apt-get -y install python3-pip python-dev
      - name: Install AWS CLI
        run: sudo pip3 install awscli
      - name: Deploy
        run: npm run deploy
