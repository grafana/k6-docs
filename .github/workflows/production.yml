name: Production

on:
  push:
    tags:
      - v*

env:
  ALGOLIA_ADMIN_KEY: ${{ secrets.PROD_CI_ALGOLIA_ADMIN_KEY })
  AWS_ACCESS_KEY_ID: ${{ secrets.PROD_CI_AWS_ACCESS_KEY }}
  AWS_CLOUDFRONT_DISTRIBUTION_ID: $({ secrets.PROD_CI_AWS_CLOUDFRONT_DISTRIBUTION_ID})
  AWS_REGION: 'eu-west-1'
  AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_CI_AWS_SECRET_KEY }}
  BUCKET_NAME: $({ secrets.PROD_CI_BUCKET_NAME })
  BUCKET_REGION: $({ secrets.PROD_CI_BUCKET_REGION })
  GATSBY_ALGOLIA_APP_ID: $({ secrets.PROD_CI_GATSBY_ALGOLIA_APP_ID })
  GATSBY_ALGOLIA_INDEX_NAME: $({ secrets.PROD_CI_GATSBY_ALGOLIA_INDEX_NAME })
  GATSBY_ALGOLIA_SEARCH_ONLY_KEY: $({ secrets.PROD_CI_GATSBY_ALGOLIA_SEARCH_ONLY_KEY })
  GATSBY_DEFAULT_APP_URL: https://app.$({ secrets.PROD_CI_MAIN_URL })
  GATSBY_DEFAULT_BLOG_URL: https://$({ secrets.PROD_CI_MAIN_URL })/blog
  GATSBY_DEFAULT_DOC_URL: https://$({ secrets.PROD_CI_MAIN_URL })/docs
  GATSBY_DEFAULT_MAIN_URL: https://$({ secrets.PROD_CI_MAIN_URL })
  GATSBY_DRIFT_API: $({ secrets.PROD_CI_GATSBY_DRIFT_API })
  GATSBY_GOOGLE_API_KEY: $({ secrets.PROD_CI_GATSBY_GOOGLE_API_KEY })

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Use Node.js 12.xs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: |
          npm run lint
          npm run lint:prose
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Use Node.js 12.xs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: k6-docs
          path: public/
  deploy-to-production:
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: k6-docs
          path: public/
      - name: Install AWS CLI dependencies
        run: sudo apt-get update && sudo apt-get -y install python-pip python-dev
      - name: Install AWS CLI
        run: sudo pip install awscli
      - name: Deploy
        run: npm run deploy
